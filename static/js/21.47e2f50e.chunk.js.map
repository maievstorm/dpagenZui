{"version":3,"sources":["views/datastream/RegisterStream.jsx","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"names":["Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","RegisterStreaming","divStyle","marginTop","datatypes","key","name","useState","Streamsource","setStreamsource","Streamtarget","setStreamtarget","sonInputChanged","event","targetName","target","targetValue","value","tonInputChanged","sx","flexGrow","container","xs","md","columns","sm","style","type","id","label","fullWidth","tentientrinh","onChange","item","size","sdbtype","map","datatype","sdatabaseservername","sdatabasehostname","sdatabaseport","sdatabasedbname","sdatabaseuser","sdatabasepassword","stableincludelist","tdbtype","tdatabaseservername","tdatabasehostname","tdatabaseport","tdatabasedbname","tdatabaseuser","tdatabasepassword","ttableincludelist","onClick","e","preventDefault","body","stream","console","log","JSON","stringify","getMenuItemUtilityClass","slot","generateUtilityClass","menuItemClasses","generateUtilityClasses","_excluded","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","backgroundClip","action","hover","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","fontSize","MenuItem","React","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","Provider","children","clsx"],"mappings":"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","file":"static/js/21.47e2f50e.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { TextField, Select, Button } from '@mui/material';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\n\r\n\r\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n// import { DatePicker } from '@mui/lab';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst RegisterStreaming = () => {\r\n\r\n    const divStyle = {\r\n        marginTop: '10px',\r\n\r\n    };\r\n    const datatypes = [\r\n        {\r\n            key: 'storage',\r\n            name: 'Lưu trữ đám mây'\r\n        },\r\n        {\r\n            key: 'dwh',\r\n            name: 'Kho dữ liệu'\r\n        },\r\n        {\r\n            key: 'bigdata',\r\n            name: 'Dữ liệu lớn'\r\n        }\r\n        ,\r\n        {\r\n            key: 'sqlserver',\r\n            name: 'Microsof Sql, Azure SQL'\r\n        },\r\n        {\r\n            key: 'oracle',\r\n            name: 'Oracle'\r\n        }\r\n        ,\r\n        {\r\n            key: 'mysql',\r\n            name: 'MySQL'\r\n        }\r\n        ,\r\n        {\r\n            key: 'postgres',\r\n            name: 'PostgresSQL'\r\n        }\r\n    \r\n    \r\n    ]\r\n\r\n \r\n    \r\n    // const [Streamtarget, setStreamtarget] = useState([\r\n    //     {\r\n    //         tdbtype: '',\r\n    //         tdatabaseservername: '',\r\n    //         tdatabasehostname: '',\r\n    //         tdatabaseport: '',\r\n    //         tdatabasedbname: '',\r\n    //         tdatabaseuser: '',\r\n    //         tdatabasepassword: '',\r\n    //         ttableincludelist: ''\r\n    \r\n    //     },\r\n    // ])\r\n\r\n    const [Streamsource, setStreamsource] = useState({})\r\n    const [Streamtarget, setStreamtarget] = useState({})\r\n\r\n    const sonInputChanged = (event) => {\r\n        const targetName = event.target.name;\r\n        const targetValue = event.target.value;\r\n    \r\n        setStreamsource((Streamsource) => ({\r\n          ...Streamsource,\r\n          [targetName]: targetValue\r\n        }));\r\n      };\r\n\r\n      const tonInputChanged = (event) => {\r\n        const targetName = event.target.name;\r\n        const targetValue = event.target.value;\r\n    \r\n        setStreamtarget((Streamtarget) => ({\r\n          ...Streamtarget,\r\n          [targetName]: targetValue\r\n        }));\r\n      };  \r\n    \r\n\r\n\r\n  \r\n\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        let stream = {\r\n            'data': [\r\n                {\r\n                    'source': Streamsource,\r\n                    'target': Streamtarget\r\n                }\r\n\r\n            ]\r\n        }\r\n\r\n     \r\n\r\n        const body = {\r\n            \"conf\": { stream },\r\n          }\r\n        \r\n    \r\n        console.log(JSON.stringify(body))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Grid container spacing={{ xs: 2, md: 2 }} columns={{ sm: 6, md: 12 }} style={divStyle}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        name=\"tentientrinh\"\r\n                        id=\"tentientrinh\"\r\n                        label=\"Tên tiến trình\"\r\n                        fullWidth\r\n                        value={Streamsource.tentientrinh}\r\n                        onChange={sonInputChanged} \r\n\r\n                    />\r\n                    <Grid item xs={3} sm={6} md={6} >\r\n                        <Item style={divStyle} >Nguồn</Item>\r\n                        <strong>Loại CSDL Nguồn: </strong>\r\n                        <Select name='sdbtype'\r\n                            size=\"small\"\r\n                            style={divStyle}\r\n                            value={Streamsource.sdbtype}\r\n                            onChange={sonInputChanged}    \r\n                        >\r\n\r\n                            {datatypes.map((datatype) => (\r\n                                <MenuItem\r\n                                    key={datatype.key}\r\n                                    value={datatype.key}\r\n                                >\r\n                                    {datatype.name}\r\n                                </MenuItem>\r\n                            ))}\r\n\r\n                        </Select>\r\n                        {/* 1 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"sdatabaseservername\"\r\n                            id=\"sdatabaseservername\"\r\n                            label=\"Tên máy chủ CSDL nguồn\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamsource.sdatabaseservername}\r\n                            onChange={sonInputChanged}\r\n                        />\r\n                        {/* 2 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"sdatabasehostname\"\r\n                            id=\"sdatabasehostname\"\r\n                            label=\"IP/Host Name CSDL nguồn\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamsource.sdatabasehostname}\r\n                            onChange={sonInputChanged}\r\n                        />\r\n                        {/* 3 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"sdatabaseport\"\r\n                            id=\"sdatabaseport\"\r\n                            label=\"Port CSDL nguồn\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamsource.sdatabaseport}\r\n                            onChange={sonInputChanged}\r\n                        />\r\n                        {/* 4 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"sdatabasedbname\"\r\n                            id=\"sdatabasedbname\"\r\n                            label=\"Tên CSDL nguồn\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamsource.sdatabasedbname}\r\n                            onChange={sonInputChanged}\r\n                        />\r\n                        {/* 5 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"sdatabaseuser\"\r\n                            id=\"sdatabaseuser\"\r\n                            label=\"Tài khoản đăng nhập nguồn\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamsource.sdatabaseuser}\r\n                            onChange={sonInputChanged}\r\n                        />\r\n                        {/* 6 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"sdatabasepassword\"\r\n                            id=\"sdatabasepassword\"\r\n                            label=\"Mật khẩu đăng nhặp nguồn\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamsource.sdatabasepassword}\r\n                            onChange={sonInputChanged}\r\n                        />\r\n                        {/* 7 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"stableincludelist\"\r\n                            id=\"stableincludelist\"\r\n                            label=\"Bảng dữ liệu nguồn\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamsource.stableincludelist}\r\n                            onChange={sonInputChanged}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={3} sm={6} md={6} >\r\n                        <Item style={divStyle}>Đích</Item>\r\n                        <strong>Loại CSDL Đích: </strong>\r\n                        <Select name='tdbtype'\r\n                            size=\"small\"\r\n                            style={divStyle}\r\n                            value={Streamtarget.tdbtype}\r\n                            onChange={tonInputChanged} \r\n                        >\r\n\r\n                            {datatypes.map((datatype) => (\r\n                                <MenuItem\r\n                                    key={datatype.key}\r\n                                    value={datatype.key}\r\n                                >\r\n                                    {datatype.name}\r\n                                </MenuItem>\r\n                            ))}\r\n\r\n                        </Select>\r\n                        {/* 1 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"tdatabaseservername\"\r\n                            id=\"tdatabaseservername\"\r\n                            label=\"Tên máy chủ CSDL đích\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamtarget.tdatabaseservername}\r\n                            onChange={tonInputChanged} \r\n                        />\r\n                        {/* 2 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"tdatabasehostname\"\r\n                            id=\"tdatabasehostname\"\r\n                            label=\"IP/Host Name CSDL đích\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamtarget.tdatabasehostname}\r\n                            onChange={tonInputChanged} \r\n                        />\r\n                        {/* 3 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"tdatabaseport\"\r\n                            id=\"tdatabaseport\"\r\n                            label=\"Port CSDL đích\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamtarget.tdatabaseport}\r\n                            onChange={tonInputChanged} \r\n                        />\r\n                        {/* 4 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"tdatabasedbname\"\r\n                            id=\"tdatabasedbname\"\r\n                            label=\"Tên CSDL đích\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamtarget.tdatabasedbname}\r\n                            onChange={tonInputChanged} \r\n                        />\r\n                        {/* 5 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"tdatabaseuser\"\r\n                            id=\"tdatabaseuser\"\r\n                            label=\"Tài khoản đăng nhập đích\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamtarget.tdatabaseuser}\r\n                            onChange={tonInputChanged} \r\n                        />\r\n                        {/* 6 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"tdatabasepassword\"\r\n                            id=\"tdatabasepassword\"\r\n                            label=\"Mật khẩu đăng nhặp đích\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamtarget.tdatabasepassword}\r\n                            onChange={tonInputChanged} \r\n                        />\r\n                        {/* 7 */}\r\n                        <TextField\r\n                            type=\"text\"\r\n                            name=\"ttableincludelist\"\r\n                            id=\"ttableincludelist\"\r\n                            label=\"Bảng dữ liệu đích\"\r\n                            fullWidth\r\n                            style={divStyle}\r\n                            value={Streamtarget.ttableincludelist}\r\n                            onChange={tonInputChanged} \r\n                        />\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n                <Button onClick={submit}>Tạo Tiến Trình</Button>\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterStreaming\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"sourceRoot":""}