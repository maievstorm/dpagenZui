{"version":3,"sources":["views/utilities/MaterialIcons.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["IFrameWrapper","styled","height","border","borderColor","theme","palette","primary","light","MaterialIcons","title","secondary","link","sx","overflow","width","src","Avatar","color","outline","size","others","useTheme","colorSX","background","paper","bgcolor","outlineSX","sizeSX","spacing","CardSecondaryAction","icon","Tooltip","placement","ButtonBase","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","main","id","transform"],"mappings":"oHAAA,oDAQMA,EAAgBC,YAAO,SAAPA,EAAiB,kBAAgB,CACnDC,OAAQ,sBACRC,OAAQ,YACRC,YAHmC,EAAGC,MAGnBC,QAAQC,QAAQC,UAaxBC,UARO,kBAClB,cAAC,IAAD,CAAUC,MAAM,iBAAiBC,UAAW,cAAC,IAAD,CAAiBC,KAAK,4DAAlE,SACI,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU,UAAtB,SACI,cAACd,EAAD,CAAeU,MAAM,gBAAgBK,MAAM,OAAOC,IAAI,6D,0ICoDnDC,EA/DA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,KAAMP,EAAoB,EAApBA,GAAOQ,EAAa,iBAClDhB,EAAQiB,cAERC,EAAUL,IAAUC,GAAW,CAAED,MAAOb,EAAMC,QAAQkB,WAAWC,MAAOC,QAAQ,GAAD,OAAKR,EAAL,UAC/ES,EAAYR,GAAW,CACzBD,MAAOA,EAAK,UAAMA,EAAN,wBACZQ,QAASrB,EAAMC,QAAQkB,WAAWC,MAClCtB,OAAQ,YACRC,YAAac,EAAK,UAAMA,EAAN,yBAElBU,EAAS,GACb,OAAQR,GACJ,IAAK,QACDQ,EAAS,CACLb,MAAOV,EAAMwB,QAAQ,KACrB3B,OAAQG,EAAMwB,QAAQ,MAE1B,MACJ,IAAK,KACDD,EAAS,CACLb,MAAOV,EAAMwB,QAAQ,MACrB3B,OAAQG,EAAMwB,QAAQ,OAE1B,MACJ,IAAK,KACDD,EAAS,CACLb,MAAOV,EAAMwB,QAAQ,GACrB3B,OAAQG,EAAMwB,QAAQ,IAE1B,MACJ,IAAK,KACDD,EAAS,CACLb,MAAOV,EAAMwB,QAAQ,GACrB3B,OAAQG,EAAMwB,QAAQ,IAE1B,MACJ,IAAK,KACDD,EAAS,CACLb,MAAOV,EAAMwB,QAAQ,OACrB3B,OAAQG,EAAMwB,QAAQ,QAE1B,MACJ,IAAK,KACDD,EAAS,CACLb,MAAOV,EAAMwB,QAAQ,KACrB3B,OAAQG,EAAMwB,QAAQ,MAE1B,MACJ,QACID,EAAS,GAGjB,OAAO,cAAC,IAAD,aAAWf,GAAE,mDAAOU,GAAYI,GAAcC,GAAWf,IAAUQ,KCH/DS,IAhDa,SAAC,GAA2B,IAAzBpB,EAAwB,EAAxBA,MAAOE,EAAiB,EAAjBA,KAAMmB,EAAW,EAAXA,KAClC1B,EAAQiB,cAEd,OACI,cAACU,EAAA,EAAD,CAAStB,MAAOA,GAAS,YAAauB,UAAU,OAAhD,SACI,eAACC,EAAA,EAAD,CAAYC,eAAa,EAAzB,WACMJ,GACE,cAAC,EAAD,CAAQK,UAAWC,IAAMC,KAAM1B,EAAM2B,OAAO,SAASC,IAAI,WAAWpB,KAAK,QAAQF,MAAM,UAAUC,SAAO,EAAxG,SACI,sBAAKJ,MAAM,MAAMb,OAAO,MAAMuC,QAAQ,cAAcC,KAAK,OAAOC,MAAM,6BAAtE,UACI,oBAAGC,SAAS,cAAZ,UACI,sBACIC,EAAE,oEACFH,KAAMrC,EAAMC,QAAQC,QAAQ,OAEhC,sBACIsC,EAAE,8FACFH,KAAMrC,EAAMC,QAAQC,QAAQuC,OAEhC,sBAAMD,EAAE,yDAAyDH,KAAMrC,EAAMC,QAAQC,QAAQ,OAC7F,sBACIsC,EAAE,yHACFH,KAAMrC,EAAMC,QAAQC,QAAQuC,UAGpC,+BACI,0BAAUC,GAAG,QAAb,SACI,sBAAMhC,MAAM,MAAMb,OAAO,QAAQwC,KAAK,QAAQM,UAAU,gCAM3EjB,GACG,cAAC,EAAD,CAAQK,UAAWC,IAAMC,KAAM1B,EAAM2B,OAAO,SAASnB,KAAK,QAAQF,MAAM,UAAUC,SAAO,EAAzF,SACKY","file":"static/js/24.496b757f.chunk.js","sourcesContent":["import { styled } from '@mui/material/styles';\nimport { Card } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\n\n// styles\nconst IFrameWrapper = styled('iframe')(({ theme }) => ({\n    height: 'calc(100vh - 210px)',\n    border: '1px solid',\n    borderColor: theme.palette.primary.light\n}));\n\n// ============================|| MATERIAL ICONS ||============================ //\n\nconst MaterialIcons = () => (\n    <MainCard title=\"Material Icons\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/material-icons/\" />}>\n        <Card sx={{ overflow: 'hidden' }}>\n            <IFrameWrapper title=\"Material Icon\" width=\"100%\" src=\"https://material-ui.com/components/material-icons/\" />\n        </Card>\n    </MainCard>\n);\n\nexport default MaterialIcons;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport MuiAvatar from '@mui/material/Avatar';\n\n// ==============================|| AVATAR ||============================== //\n\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\n    const theme = useTheme();\n\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\n    const outlineSX = outline && {\n        color: color ? `${color}.main` : `primary.main`,\n        bgcolor: theme.palette.background.paper,\n        border: '2px solid',\n        borderColor: color ? `${color}.main` : `primary.main`\n    };\n    let sizeSX = {};\n    switch (size) {\n        case 'badge':\n            sizeSX = {\n                width: theme.spacing(3.5),\n                height: theme.spacing(3.5)\n            };\n            break;\n        case 'xs':\n            sizeSX = {\n                width: theme.spacing(4.25),\n                height: theme.spacing(4.25)\n            };\n            break;\n        case 'sm':\n            sizeSX = {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            };\n            break;\n        case 'lg':\n            sizeSX = {\n                width: theme.spacing(9),\n                height: theme.spacing(9)\n            };\n            break;\n        case 'xl':\n            sizeSX = {\n                width: theme.spacing(10.25),\n                height: theme.spacing(10.25)\n            };\n            break;\n        case 'md':\n            sizeSX = {\n                width: theme.spacing(7.5),\n                height: theme.spacing(7.5)\n            };\n            break;\n        default:\n            sizeSX = {};\n    }\n\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\n};\n\nAvatar.propTypes = {\n    className: PropTypes.string,\n    color: PropTypes.string,\n    outline: PropTypes.bool,\n    size: PropTypes.string,\n    sx: PropTypes.object\n};\n\nexport default Avatar;\n","import PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\n\n// project imports\nimport Avatar from '../extended/Avatar';\n\n// ==============================|| CARD SECONDARY ACTION ||============================== //\n\nconst CardSecondaryAction = ({ title, link, icon }) => {\n    const theme = useTheme();\n\n    return (\n        <Tooltip title={title || 'Reference'} placement=\"left\">\n            <ButtonBase disableRipple>\n                {!icon && (\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <g clipPath=\"url(#clip0)\">\n                                <path\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\n                                    fill={theme.palette.primary[800]}\n                                />\n                                <path\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\n                                <path\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\n                                    fill={theme.palette.primary.main}\n                                />\n                            </g>\n                            <defs>\n                                <clipPath id=\"clip0\">\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\n                                </clipPath>\n                            </defs>\n                        </svg>\n                    </Avatar>\n                )}\n                {icon && (\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\n                        {icon}\n                    </Avatar>\n                )}\n            </ButtonBase>\n        </Tooltip>\n    );\n};\n\nCardSecondaryAction.propTypes = {\n    icon: PropTypes.node,\n    link: PropTypes.string,\n    title: PropTypes.string\n};\n\nexport default CardSecondaryAction;\n"],"sourceRoot":""}