{"version":3,"sources":["../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/NotStartedOutlined.js","views/dataingest/stepForm/ReviewItem.jsx","views/dataingest/EditFlowJob.jsx","services/DataIngest.js","views/dataingest/stepForm/constant.js","../node_modules/@mui/icons-material/RateReview.js","../node_modules/@mui/icons-material/Refresh.js","views/dataingest/MultipleSelectCheckmarks.js","views/dataingest/LogInfo.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","ReviewItem","props","useState","Date","dateValue","setDateValue","setConfInfo","conf","edit","undefined","onInputChanged","subscription_id","setSubscription_id","useEffect","router","config","rootapi","UserService","getUsername","axios","method","url","then","res","data","catch","error","console","log","divStyle","margin","formSrcFields","formQuery","crontab_struct","processTime","Schedule","Box","component","sx","m","width","noValidate","autoComplete","TextField","id","name","label","DagId","InputProps","readOnly","disableUnderline","variant","focused","size","FormControl","fullWidth","InputLabel","Select","onChange","style","headername","scheduletypes","map","scheduletype","MenuItem","key","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","newValue","renderInput","params","schedule_interval","owner","tags","form","index","sourcetype","event","handleFormSrcChange","datatypes","datatype","connectstring","databasename","srcusername","srcpassword","multiline","tablename","alias","Button","onClick","removeFields","addFields","formquery","queryname","handleformQuery","MultipleSelectCheckmarks","headerName","setformQuery","source","listsourcetable","querydetail","targettable","formSrcField","writemode","writemodetype","removeQuery","addFieldQuery","EditFlowJob","location","useLocation","state","navigate","useNavigate","confInfo","setEdit","setFormSrcFields","setData","getairflowapi","airflowapi","get","JSON","parse","customer_invoice_data","query","err","auth","username","password","dag_runs","item","start_date","toLocaleString","end_date","dag_run_id","MainCard","IconButton","color","fontSize","flexGrow","Grid","container","spacing","xs","md","columns","sm","marginTop","body","stringify","status","targetName","target","targetValue","splice","getLoginfo","a","BaseAxios","response","Logdetail","DagIdnDagrunId","GetProcess","item_type","headers","user_name","DataIngest","time","minus","getMinutes","day","getDay","hours","getHours","date","getDate","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","React","itemname","setitemname","names","labelId","multiple","join","split","input","renderValue","selected","checked","indexOf","primary","LogInfo","rows","getData","refresh","options","filter","print","selectableRows","responsive","textLabels","customToolbar","customToolbarSelect","selectedRows","title","type","dataIndex"],"mappings":"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","file":"static/js/12.ff72bc20.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 6H9v8h2V8zm6 4-5-4v8l5-4z\"\n}), 'NotStartedOutlined');\n\nexports.default = _default;","import Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Select } from '@mui/material';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useState, useEffect } from \"react\";\r\nimport { scheduletypes, writemodetype } from \"./constant\";\r\nimport { datatypes } from \"./constant\";\r\nimport { IconSquarePlus, IconCircleMinus } from '@tabler/icons'\r\nimport Button from '@mui/material/Button';\r\nimport MultipleSelectCheckmarks from \"../MultipleSelectCheckmarks\";\r\nimport UserService from \"services/UserService\";\r\nimport config from \"../../../config\";\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport axios from \"axios\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { processTime } from \"./constant\";\r\n\r\n\r\nexport default function ReviewItem(props) {\r\n    const [dateValue, setDateValue] = useState(new Date('2014-08-18T21:11:54'));\r\n    const setConfInfo = props?.setConfInfo\r\n    const conf = props?.conf\r\n    const edit = props?.edit === undefined ? true : props?.edit === false ? true : false\r\n    const onInputChanged = props?.onInputChanged\r\n    const [subscription_id, setSubscription_id] = useState([]);\r\n    useEffect(() => {\r\n        let router = config.rootapi + '/subscription/subbyusername/' + UserService.getUsername()\r\n        axios({\r\n            method: 'get',\r\n            url: router\r\n        })\r\n            .then(res => {\r\n                setSubscription_id(res.data.data)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }, [])\r\n\r\n    const divStyle = {\r\n        margin: '5px'\r\n    };\r\n    const formSrcFields = props?.formSrcFields\r\n    const formQuery = props?.formQuery\r\n    const handleChange = (newValue) => {\r\n        setDateValue(newValue)\r\n        let crontab_struct = processTime(newValue, conf?.Schedule)\r\n        setConfInfo({ ...conf, 'schedule_interval': crontab_struct });\r\n\r\n    };\r\n    useEffect(() => {\r\n        let crontab_struct = processTime(dateValue, conf?.Schedule)\r\n        setConfInfo({ ...conf, 'schedule_interval': crontab_struct });\r\n    }, [conf?.Schedule])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Box component=\"form\"\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\">\r\n\r\n                <TextField\r\n                    id=\"DagId\"\r\n                    name=\"DagId\"\r\n                    label=\"Tên tiến trình\"\r\n                    value={conf?.DagId}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true,\r\n                    }}\r\n                    variant=\"standard\"\r\n                    // onChange={onInputChanged}\r\n                    focused={true}\r\n                    size=\"small\"\r\n\r\n                />\r\n                {\r\n                    !edit && <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Tần suất chạy</InputLabel>\r\n                        <Select id=\"Schedule\" name='Schedule' value={conf?.Schedule} onChange={onInputChanged}\r\n                            size=\"small\"\r\n                            style={divStyle}\r\n                            headername={'Tần suất chạy'}\r\n                        >\r\n\r\n                            {scheduletypes.map((scheduletype) => (\r\n                                <MenuItem\r\n                                    key={scheduletype.key}\r\n                                    value={scheduletype.key}\r\n                                >\r\n                                    {scheduletype.name}\r\n                                </MenuItem>\r\n                            ))}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                }\r\n\r\n                {\r\n                    edit && <TextField\r\n                        label=\"Tần suất chạy\"\r\n                        id=\"Schedule\"\r\n                        name=\"Schedule\"\r\n                        size=\"small\"\r\n\r\n                        value={conf?.Schedule}\r\n                        // onChange={onInputChanged}\r\n                        InputProps={{\r\n                            readOnly: edit,\r\n                            disableUnderline: edit,\r\n                        }}\r\n                        variant=\"standard\"\r\n                        focused={true}\r\n\r\n                    />\r\n                }\r\n                {\r\n                    !edit && <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DateTimePicker\r\n                            label=\"Lịch chay\"\r\n                            name=\"schedule_interval\"\r\n                            value={dateValue}\r\n                            onChange={handleChange}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                }\r\n\r\n                {\r\n                    edit &&\r\n                    <TextField\r\n                        label=\"schedule_interval\"\r\n                        id=\"schedule_interval\"\r\n                        name=\"schedule_interval\"\r\n                        size=\"small\"\r\n\r\n                        value={conf?.schedule_interval}\r\n                        // onChange={onInputChanged}\r\n                        InputProps={{\r\n                            readOnly: edit,\r\n                            disableUnderline: true,\r\n                        }}\r\n                        variant=\"standard\"\r\n                        focused={true}\r\n\r\n                    />\r\n                }\r\n\r\n\r\n                <TextField\r\n                    label=\"Owner\"\r\n                    id=\"Owner\"\r\n                    name=\"Owner\"\r\n                    size=\"small\"\r\n\r\n                    value={conf?.owner}\r\n                    // onChange={onInputChanged}\r\n                    InputProps={{\r\n                        readOnly: edit,\r\n                        disableUnderline: true,\r\n                    }}\r\n                    variant=\"standard\"\r\n                    focused={true}\r\n\r\n                />\r\n\r\n                <TextField\r\n                    label=\"Tags\"\r\n                    id=\"tags\"\r\n                    name=\"tags\"\r\n\r\n                    focused={true}\r\n\r\n                    value={conf?.tags}\r\n                    onChange={onInputChanged}\r\n                    size=\"small\"\r\n                    InputProps={{\r\n                        readOnly: edit,\r\n                        disableUnderline: edit,\r\n                    }}\r\n                    variant=\"standard\"\r\n\r\n                />\r\n\r\n                {\r\n                    !edit &&\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Subscription</InputLabel>\r\n                        <Select id=\"subscription_id\" name='subscription_id' value={conf?.subscription_id} onChange={onInputChanged}\r\n                            size=\"small\"\r\n                            style={divStyle}\r\n                            headername={'Subscription id'}\r\n                        >\r\n\r\n                            {subscription_id.map((scheduletype) => (\r\n                                <MenuItem\r\n                                    key={scheduletype.subscription_id}\r\n                                    value={scheduletype.subscription_id}\r\n                                >\r\n                                    {scheduletype.subscription_id}\r\n                                </MenuItem>\r\n                            ))}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                }\r\n\r\n                {\r\n                    edit && <TextField\r\n                        label=\"Subscription\"\r\n                        id=\"subscription_id\"\r\n                        name=\"subscription_id\"\r\n                        size=\"small\"\r\n\r\n                        value={conf?.subscription_id}\r\n                        // onChange={onInputChanged}\r\n                        InputProps={{\r\n                            readOnly: edit,\r\n                            disableUnderline: edit,\r\n                        }}\r\n                        variant=\"standard\"\r\n                        focused={true}\r\n\r\n                    />\r\n                }\r\n\r\n            </Box>\r\n\r\n            <Box>\r\n                {\r\n                    formSrcFields?.map((form, index) => (\r\n                        <Box\r\n                            key={index}\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\">\r\n\r\n                            <strong>Source {index + 1} </strong><br></br>\r\n                            {\r\n                                !edit && <Select name='sourcetype' value={form.sourcetype} onChange={event => props.handleFormSrcChange(event, index)}\r\n                                    size=\"small\"\r\n                                    style={divStyle}\r\n                                >\r\n                                    {datatypes.map((datatype) => (\r\n                                        <MenuItem\r\n                                            key={datatype.key}\r\n                                            value={datatype.key}\r\n                                        >\r\n                                            {datatype.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n\r\n                                </Select>\r\n                            }\r\n                            {\r\n                                edit &&\r\n                                <TextField\r\n                                    label='Source Type'\r\n                                    name='sourcetype'\r\n                                    onChange={event => props.handleFormSrcChange(event, index)}\r\n\r\n                                    value={form?.sourcetype}\r\n                                    size=\"small\"\r\n                                    InputProps={{\r\n                                        readOnly: edit,\r\n                                        disableUnderline: edit,\r\n                                    }}\r\n                                    variant=\"standard\"\r\n                                    focused={true}\r\n                                />\r\n                            }\r\n                            <TextField\r\n                                label='Đường dẫn kết nối'\r\n                                name='connectstring'\r\n                                value={form?.connectstring}\r\n                                size=\"small\"\r\n                                onChange={event => props.handleFormSrcChange(event, index)}\r\n\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true}\r\n                            />\r\n                            <TextField\r\n                                name='databasename'\r\n                                size=\"small\"\r\n                                label='Tên cơ sở dữ liệu'\r\n                                onChange={event => props.handleFormSrcChange(event, index)}\r\n\r\n                                value={form.databasename}\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true}\r\n                            />\r\n                            <br></br>\r\n                            <TextField\r\n                                name='srcusername'\r\n                                size=\"small\"\r\n                                label='Tài khoản đăng nhập'\r\n                                onChange={event => props.handleFormSrcChange(event, index)}\r\n\r\n                                value={form.srcusername}\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true}\r\n                            />\r\n                            <TextField\r\n                                name='srcpassword'\r\n                                size=\"small\"\r\n                                label='Mật khẩu'\r\n                                onChange={event => props.handleFormSrcChange(event, index)}\r\n\r\n                                value={form.srcpassword}\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true} />\r\n\r\n                            <TextField\r\n                                name='tablename'\r\n                                size=\"small\"\r\n                                multiline\r\n                                fullWidth\r\n                                label='Tên bảng/Truy vấn/Tên file'\r\n                                onChange={event => props.handleFormSrcChange(event, index)}\r\n\r\n                                value={form.tablename}\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true} />\r\n                            <TextField\r\n                                name='alias'\r\n                                size=\"small\"\r\n                                label='Tên bảng cho tiến trình'\r\n                                onChange={event => props.handleFormSrcChange(event, index)}\r\n\r\n                                value={form.alias}\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true}\r\n                            />\r\n                            {\r\n                                !edit && <Button style={divStyle} name=\"removesource\" onClick={() => props?.removeFields(index)}><IconCircleMinus /></Button>\r\n                            }\r\n                        </Box>\r\n\r\n                    ))\r\n\r\n                }\r\n                {\r\n                    !edit && <Button style={divStyle} name=\"addsoruce\" onClick={props?.addFields}><IconSquarePlus /></Button>\r\n\r\n                }\r\n\r\n            </Box>\r\n            <Box>\r\n                {\r\n                    formQuery?.map((formquery, index) => (\r\n                        <Box\r\n                            // component=\"form\"\r\n                            //   sx={{\r\n                            //     '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                            //   }}\r\n                            //   noValidate\r\n                            //   autoComplete=\"off\"\r\n                            key={index}\r\n\r\n                        >\r\n                            <strong>Query {index + 1} </strong>\r\n                            <br></br>\r\n                            <TextField\r\n                                label=\"Tên job tổng hợp\"\r\n                                id=\"queryname\"\r\n                                name=\"queryname\"\r\n                                value={formquery?.queryname}\r\n                                size=\"small\"\r\n                                style={divStyle}\r\n                                onChange={event => props.handleformQuery(event, index)}\r\n\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true}\r\n                            />\r\n                            {\r\n                                !edit && <MultipleSelectCheckmarks\r\n                                    headerName={'Danh sách bảng cần tổng hợp'}\r\n                                    data={props.formSrcFields}\r\n                                    formQuery={props.formQuery}\r\n                                    setformQuery={props.setformQuery}\r\n                                    index={index}\r\n                                    source={'listsourcetable'} />\r\n                            }\r\n                            {\r\n                                edit && <TextField\r\n                                    label=\"Bảng cần tổng hợp\"\r\n                                    value={formquery?.listsourcetable}\r\n                                    size=\"small\"\r\n                                    style={divStyle}\r\n\r\n                                    InputProps={{\r\n                                        readOnly: edit,\r\n                                        disableUnderline: edit,\r\n                                    }}\r\n                                    variant=\"standard\"\r\n                                    focused={true}\r\n                                />\r\n                            }\r\n\r\n                            <br></br>\r\n\r\n                            <TextField\r\n                                label=\"Query Detail\"\r\n                                id=\"querydetail\"\r\n                                name=\"querydetail\"\r\n                                multiline\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                value={formquery?.querydetail}\r\n                                onChange={event => props.handleformQuery(event, index)}\r\n\r\n                                style={divStyle}\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                }}\r\n                                focused={true}\r\n                            />\r\n                            <br></br>\r\n\r\n\r\n                            {/* <TextField\r\n                                label=\"Target table\"\r\n                                size=\"small\"\r\n                                name='targettable'\r\n                                value={formquery?.targettable}\r\n                                onChange={event => props.handleformQuery(event, index)}\r\n\r\n                                style={divStyle}\r\n                                InputProps={{\r\n                                    readOnly: edit,\r\n                                    disableUnderline: edit,\r\n                                }}\r\n                                variant=\"standard\"\r\n                                focused={true}\r\n                            /> */}\r\n\r\n                            <Select name='targettable'\r\n                                value={formquery?.targettable}\r\n                                onChange={event => props.handleformQuery(event, index)}\r\n                                size=\"small\"\r\n                                style={divStyle}\r\n                                variant=\"standard\"\r\n                                focused={true}\r\n                            >\r\n\r\n                                {formSrcFields?.map((formSrcField) => (\r\n                                    <MenuItem\r\n                                        key={formSrcField.alias}\r\n                                        value={formSrcField.alias}\r\n                                    >\r\n                                        {formSrcField.alias}\r\n                                    </MenuItem>\r\n                                ))}\r\n\r\n                            </Select>\r\n                            {\r\n                                !edit && <Select name='writemode'\r\n                                    value={formquery.writemode}\r\n                                    onChange={event => props.handleformQuery(event, index)}\r\n                                    size=\"small\"\r\n                                    style={divStyle}\r\n                                >\r\n\r\n                                    {writemodetype.map((writemode) => (\r\n                                        <MenuItem\r\n                                            key={writemode.key}\r\n                                            value={writemode.key}\r\n                                        >\r\n                                            {writemode.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n\r\n                                </Select>\r\n                            }\r\n                            {\r\n                                edit && <TextField\r\n                                    label=\"Write mode\"\r\n                                    size=\"small\"\r\n                                    value={formquery?.writemode}\r\n                                    style={divStyle}\r\n                                    InputProps={{\r\n                                        readOnly: edit,\r\n                                        disableUnderline: edit,\r\n                                    }}\r\n                                    variant=\"standard\"\r\n                                    focused={true}\r\n                                />\r\n                            }\r\n                            {\r\n                                !edit && <Button name=\"btnremovequery\" onClick={() => props.removeQuery(index)}><IconCircleMinus /></Button>\r\n\r\n                            }\r\n\r\n\r\n                        </Box>\r\n\r\n                    ))\r\n                }\r\n                {\r\n                    !edit && <Button style={divStyle} name=\"btnaddquery\" onClick={props.addFieldQuery}><IconSquarePlus /></Button>\r\n\r\n                }\r\n\r\n            </Box>\r\n        </div>\r\n    )\r\n}","import { useLocation, useNavigate } from \"react-router\"\r\nimport ReviewItem from \"./stepForm/ReviewItem\"\r\nimport config from \"../../config\";\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { useEffect, useState } from \"react\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport NotStartedOutlinedIcon from '@mui/icons-material/NotStartedOutlined';\r\nimport axios from \"axios\";\r\nimport { IconButton } from '@mui/material';\r\nimport UserService from 'services/UserService';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport LogInfo from \"./LogInfo\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\n\r\n\r\nexport default function EditFlowJob() {\r\n    const location = useLocation()\r\n    const DagId = location?.state?.id\r\n    const navigate = useNavigate()\r\n\r\n    const [confInfo, setConfInfo] = useState()\r\n    const [edit, setEdit] = useState(false)\r\n    const [formSrcFields, setFormSrcFields] = useState([])\r\n    const [formQuery, setformQuery] = useState([])\r\n    const [rows, setData] = useState([]);\r\n\r\n\r\n    const onInputChanged = (event) => {\r\n        const targetName = event.target.name;\r\n        const targetValue = event.target.value;\r\n\r\n        setConfInfo((confInfo) => ({\r\n            ...confInfo,\r\n            [targetName]: targetValue\r\n        }));\r\n    };\r\n  \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getairflowapi = config.rootapi + '/invoice/' + DagId;\r\n        let router = config.airflowapi + '/dags/' + DagId + '/dagRuns?limit=40&order_by=-start_date'\r\n\r\n        axios.get(getairflowapi)\r\n            .then(res => {\r\n                let data = res.data.data;\r\n                data = JSON.parse(data.customer_invoice_data);\r\n                data = data.conf.conf\r\n                setConfInfo(data)\r\n                setFormSrcFields(data.source)\r\n                setformQuery(data.query)\r\n            })\r\n            .catch(err => console.log(err))\r\n        axios({\r\n            method: 'get',\r\n            url: router,\r\n            auth: {\r\n                username: 'hung',\r\n                password: '123456a@'\r\n            }\r\n\r\n        })\r\n            .then(res => {\r\n                setData(res.data.dag_runs.map(item => {\r\n                    let start_date = new Date(Date.parse(item.start_date)).toLocaleString()\r\n                    // let execution_date = new Date( Date.parse(item.execution_date) ).toLocaleString()\r\n                    let end_date = new Date(Date.parse(item.end_date)).toLocaleString()\r\n\r\n                    return {\r\n                        'dag_run_id': item.dag_run_id,\r\n                        'start_date': start_date,\r\n                        // 'execution_date': execution_date,\r\n                        'end_date': end_date,\r\n                        'state': item.state\r\n                    }\r\n                }))\r\n            })\r\n\r\n    }, [])\r\n    const handleFormSrcChange = (event, index) => {\r\n        let data = [...formSrcFields];\r\n        data[index][event.target.name] = event.target.value;\r\n        setFormSrcFields(data);\r\n    }\r\n    const removeFields = (index) => {\r\n        let data = [...formSrcFields];\r\n        data.splice(index, 1)\r\n        setFormSrcFields(data)\r\n    }\r\n    const addFields = () => {\r\n        let object = {\r\n            sourcetype: '',\r\n            connectstring: '',\r\n            tablename: '',\r\n            alias: ''\r\n        }\r\n\r\n        setFormSrcFields([...formSrcFields, object])\r\n    }\r\n    const removeQuery = (index) => {\r\n        let data = [...formQuery];\r\n        data.splice(index, 1)\r\n        setformQuery(data)\r\n    }\r\n    const addFieldQuery = () => {\r\n        let object = {\r\n            queryname: '',\r\n            querydetail: '',\r\n            // targettype: '',\r\n            listsourcetable: '',\r\n            targettable: ''\r\n        }\r\n\r\n        setformQuery([...formQuery, object])\r\n\r\n    }\r\n    const handleformQuery = (event, index) => {\r\n        let data = [...formQuery];\r\n        data[index][event.target.name] = event.target.value;\r\n        setformQuery(data);\r\n    }\r\n\r\n\r\n    const save = () => {\r\n        let conf = {\r\n            'DagId': confInfo.DagId,\r\n            \"Schedule\": confInfo.Schedule,\r\n            'schedule_interval': confInfo.schedule_interval,\r\n            \"owner\": UserService.getUsername(),\r\n            'tags': confInfo.tags,\r\n            'subscription_id': confInfo.subscription_id,\r\n            'source': formSrcFields,\r\n            'query': formQuery\r\n        }\r\n        const body = {\r\n            \"conf\": { conf }\r\n        }\r\n        const data = {\r\n            \"customer_invoice_data\": JSON.stringify(body),\r\n            \"invoice_description\": confInfo.DagId\r\n        }\r\n        let router = config.rootapi + '/invoice/itemname/' + confInfo.DagId\r\n        axios({\r\n            method: 'post',\r\n            url: config.airflowapi + '/dags/dag_create_job_file/dagRuns',\r\n\r\n            auth: {\r\n                username: 'hung',\r\n                password: '123456a@'\r\n            },\r\n            data: body\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    axios({\r\n                        method: 'put',\r\n                        url: router,\r\n                        data: data\r\n                    })\r\n                    navigate('/dataingest/', { state: { id: DagId } })\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n    const submit = () => {\r\n        let conf = {\r\n            'DagId': confInfo.DagId,\r\n            \"Schedule\": confInfo.Schedule,\r\n            'schedule_interval': confInfo.schedule_interval,\r\n            \"owner\": UserService.getUsername(),\r\n            'tags': confInfo.tags,\r\n            'subscription_id': confInfo.subscription_id,\r\n            'source': formSrcFields,\r\n            'query': formQuery\r\n        }\r\n        const body = {\r\n            \"conf\": { conf }\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: config.airflowapi + '/dags/' + confInfo.DagId + '/dagRuns',\r\n\r\n            auth: {\r\n                username: 'hung',\r\n                password: '123456a@'\r\n            },\r\n            data: body\r\n        })\r\n\r\n    }\r\n    const backtodataingest = () => {\r\n\r\n        navigate('/dataingest');\r\n    }\r\n    const divStyle = {\r\n        marginTop: '10px',\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <MainCard>\r\n            <Box>\r\n                <h3><IconButton onClick={() => backtodataingest()}>\r\n                    <ArrowBackIcon color=\"primary\" fontSize=\"medium\" />\r\n                </IconButton>Thông số chi tiết tiến trình</h3>\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={{ xs: 2, md: 2 }} columns={{ sm: 6, md: 12 }} style={divStyle}>\r\n                        <Grid item xs={3} sm={6} md={4}>\r\n                            <IconButton onClick={() => setEdit(!edit)}>\r\n                                <EditIcon color=\"primary\" fontSize=\"medium\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={3} sm={6} md={4}>\r\n                            <IconButton onClick={save}>\r\n                                <SaveIcon color=\"primary\" fontSize=\"medium\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={3} sm={6} md={4}>\r\n                            <IconButton onClick={submit}>\r\n                                <NotStartedOutlinedIcon color=\"primary\" fontSize=\"medium\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Box>\r\n\r\n\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                <ReviewItem conf={confInfo} edit={edit} onInputChanged={onInputChanged}\r\n                                formSrcFields={formSrcFields}\r\n                                formQuery={formQuery}\r\n                                addFields={addFields}\r\n                                setConfInfo={setConfInfo}\r\n                                removeFields={removeFields}\r\n                                handleFormSrcChange={handleFormSrcChange}\r\n                                removeQuery={removeQuery}\r\n                                addFieldQuery={addFieldQuery}\r\n                                handleformQuery={handleformQuery}\r\n                                setformQuery={setformQuery}\r\n\r\n                            />\r\n                </Box>\r\n            </Box>\r\n        </MainCard>\r\n\r\n    )\r\n\r\n}","import BaseAxios from \"./BaseAxios\";\r\nimport config from \"config\";\r\nimport UserService from \"./UserService\";\r\n\r\nconst getLoginfo = async (DagId) => {\r\n    let router = config.airflowapi + '/dags/' + DagId + '/dagRuns?limit=40&order_by=-start_date'\r\n    let response\r\n    try {\r\n        response = await BaseAxios({\r\n            method: 'get',\r\n            url: router,\r\n            auth: {\r\n                username: 'hung',\r\n                password: '123456a@'\r\n            }\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    return response\r\n}\r\n\r\n//https://flowdpa.apps.xplat.fis.com.vn/api/v1/dags/chinh_transfer_card_transaction/dagRuns/manual__2022-07-04T10%3A46%3A43.318462%2B00%3A00/taskInstances?limit=100\r\n\r\nconst Logdetail = async (DagIdnDagrunId) => {\r\n    let router = config.airflowapi + '/dags/' + DagIdnDagrunId +'/taskInstances?limit=100';\r\n    let response\r\n    try {\r\n        response = await BaseAxios({\r\n            method: 'get',\r\n            url: router,\r\n            auth: {\r\n                username: 'hung',\r\n                password: '123456a@'\r\n            }\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    return response\r\n}\r\n\r\nexport const GetProcess = async (item_type)=>{\r\n    let response\r\n    const router =  '/invoice/usernamentype';\r\n    let JWTToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJDTE9PbHdEZ0pPTGpVOHVzMnoySTNyT2pzRkEzNnF6TiJ9.2hsA0NJzwy2YJOeST2JnYJoRIohiJh9SHaKvp9GhgjM';\r\n    try {\r\n        response = await BaseAxios({\r\n            method: 'get',\r\n            url: router,\r\n            headers: {\"authorization\" : `Bearer ${JWTToken}`},\r\n            params: {\r\n                user_name: UserService.getUsername(),\r\n                item_type: item_type\r\n            }\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    return response\r\n}\r\n\r\nconst DataIngest = {\r\n    getLoginfo,\r\n    Logdetail\r\n\r\n};\r\n\r\nexport default DataIngest;","export const datatypes = [\r\n    {\r\n        key: 'storage',\r\n        name: 'Lưu trữ đám mây'\r\n    },\r\n    {\r\n        key: 'dwh',\r\n        name: 'Kho dữ liệu'\r\n    },\r\n    {\r\n        key: 'bigdata',\r\n        name: 'Dữ liệu lớn'\r\n    }\r\n    ,\r\n    {\r\n        key: 'sqlserver',\r\n        name: 'Microsof Sql'\r\n    }\r\n    ,\r\n    {\r\n        key: 'azuresql',\r\n        name: 'Azure SQL'\r\n    },\r\n    {\r\n        key: 'oracle',\r\n        name: 'Oracle'\r\n    }\r\n    ,\r\n    {\r\n        key: 'mysql',\r\n        name: 'MySQL'\r\n    }\r\n    ,\r\n    {\r\n        key: 'postgres',\r\n        name: 'PostgresSQL'\r\n    }\r\n\r\n\r\n]\r\nexport const scheduletypes = [\r\n    {\r\n        key: 'None',\r\n        name: 'None'\r\n    },\r\n    {\r\n        key: '@once',\r\n        name: 'Một lần'\r\n    },\r\n    {\r\n        key: '@hourly',\r\n        name: 'Hằng giờ'\r\n    },\r\n    {\r\n        key: '@daily',\r\n        name: 'Hằng ngày'\r\n    },\r\n    {\r\n        key: '@weekly',\r\n        name: 'Hằng tuần'\r\n    },\r\n    {\r\n        key: '@monthly',\r\n        name: 'Hằng tháng'\r\n    }\r\n\r\n\r\n]\r\nexport const writemodetype = [\r\n    {\r\n      key: 'append',\r\n      name: 'append'\r\n    },\r\n    {\r\n      key: 'overwrite',\r\n      name: 'overwrite'\r\n    }\r\n  ]\r\n  export  const processTime = (time,Schedule) =>{\r\n    let minus = time.getMinutes()\r\n    // let year = time.getFullYear()\r\n    // let month = time.getMonth()\r\n    let day = time.getDay()\r\n    let hours = time.getHours()\r\n    let date = time.getDate()\r\n    let crontab_struct =  'None'\r\n    if(Schedule === '@hourly'){\r\n      crontab_struct = `${minus} * * * *`\r\n    }\r\n    else if(Schedule === '@daily'){\r\n      crontab_struct = `${minus} ${hours} * * *`\r\n    }\r\n    else if(Schedule === '@weekly'){\r\n      crontab_struct = `${minus} ${hours} * * ${day}`\r\n    }\r\n    else if(Schedule === '@monthly'){\r\n      crontab_struct = `${minus} ${hours} ${date} * *`\r\n    }\r\n    return crontab_struct    \r\n  }","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z\"\n}), 'RateReview');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;","import * as React from 'react';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Select from '@mui/material/Select';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nexport default function MultipleSelectCheckmarks({headerName,data,formQuery,setformQuery,index,source}) {\r\n    const [itemname, setitemname] = React.useState([]);\r\n\r\n    const names = data?.map(item => {\r\n    if (item !== undefined){\r\n        return item.alias\r\n    }\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let data = [...formQuery];\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    data[index][source] = value.join(',')\r\n    setformQuery(data);\r\n    setitemname(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, width: 300 }}>\r\n        <InputLabel id=\"multiple-checkbox-label\">{headerName}</InputLabel>\r\n        <Select\r\n          labelId=\"multiple-checkbox-label\"\r\n          id=\"multiple-checkbox\"\r\n          multiple\r\n          value={itemname}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput label='Tag' />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={itemname.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router\"\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport DataIngest from \"services/DataIngest\";\r\nimport { Tooltip, IconButton } from '@mui/material';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n\r\nimport RateReviewIcon from '@mui/icons-material/RateReview';\r\nexport default function LogInfo() {\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const DagId = location?.state?.id\r\n    const [rows, setData] = useState([]);\r\n\r\n\r\n    const getData = () => {\r\n        DataIngest.getLoginfo(DagId)\r\n            .then(res => {\r\n                setData(res.data.dag_runs.map(item => {\r\n                    let start_date = new Date(Date.parse(item.start_date)).toLocaleString()\r\n                    // let execution_date = new Date( Date.parse(item.execution_date) ).toLocaleString()\r\n                    let end_date = new Date(Date.parse(item.end_date)).toLocaleString()\r\n\r\n                    return {\r\n                        'dag_run_id': item.dag_run_id,\r\n                        'start_date': start_date,\r\n                        // 'execution_date': execution_date,\r\n                        'end_date': end_date,\r\n                        'state': item.state\r\n                    }\r\n                }))\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            name: \"dag_run_id\",\r\n            options: {\r\n                filter: true\r\n            },\r\n            label: 'Lịch sử'\r\n        },\r\n        {\r\n            name: \"start_date\",\r\n            options: {\r\n                filter: true\r\n            },\r\n            label: 'Bắt đầu',\r\n        },\r\n        // {\r\n        //     name: \"execution_date\",\r\n        //     options: {\r\n        //         filter: true\r\n        //     },\r\n        //     label: 'execution_date'\r\n        // },\r\n        {\r\n            name: \"end_date\",\r\n            options: {\r\n                filter: true\r\n            },\r\n            label: 'Kết thúc'\r\n        }\r\n        ,\r\n        {\r\n            name: \"state\",\r\n            options: {\r\n                filter: true\r\n            },\r\n            label: 'Trạng thái'\r\n        }\r\n\r\n    ];\r\n\r\n    const onEdittJobClickHandler = (type, selected) => {\r\n        navigate(type, { state: { id: selected } })\r\n    }\r\n\r\n    const refresh = () => {\r\n        getData()\r\n    }\r\n\r\n\r\n    const options = {\r\n        filter: false,\r\n        print: false,\r\n        selectableRows: \"single\",\r\n        responsive: \"standard\",\r\n        textLabels: {},\r\n        customToolbar: () => {\r\n            return (\r\n                <IconButton onClick={refresh}>{<RefreshIcon />}</IconButton>\r\n            )\r\n        },\r\n        customToolbarSelect: selectedRows => (\r\n            <>\r\n                <Tooltip title=\"Xem chi tiết log\">\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            onEdittJobClickHandler('logdagdetail', DagId + '/dagRuns/' + rows[selectedRows.data[0].dataIndex]['dag_run_id']);\r\n\r\n                        }}\r\n\r\n                    >\r\n                        <RateReviewIcon />\r\n                    </IconButton>\r\n\r\n                </Tooltip>\r\n\r\n            </>\r\n\r\n        )\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Button onClick={() => navigate('/dataingest')} >{<ArrowBackIcon />}</Button>\r\n                <p>Tên tiến trình: <strong>{DagId}</strong></p>\r\n            </Box>\r\n\r\n            <MUIDataTable\r\n                title={\"Lịch sử tiến trình\"}\r\n                data={rows}\r\n                columns={columns}\r\n                options={options}\r\n\r\n            />\r\n        </Box>\r\n    )\r\n}"],"sourceRoot":""}