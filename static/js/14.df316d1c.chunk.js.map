{"version":3,"sources":["utils/password-strength.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","assets/images/icons/social-google.svg","ui-component/cards/AuthFooter.js"],"names":["strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","FirebaseRegister","others","theme","useTheme","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","useState","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","a","console","error","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","count","temp","label","color","errorMain","warningDark","orangeMain","successMain","successDark","useEffect","Grid","container","direction","justifyContent","spacing","item","xs","AnimateButton","Button","variant","fullWidth","onClick","size","sx","backgroundColor","palette","grey","borderColor","Box","mr","sm","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","flexGrow","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","current","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","margin","name","type","defaultValue","typography","customInput","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","FormHelperText","e","target","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","fontSize","FormControlLabel","control","Checkbox","component","Link","to","mt","disableElevation","Register","AuthWrapper1","minHeight","AuthCardWrapper","Logo","Stack","secondary","main","gutterBottom","textAlign","AuthRegister","textDecoration","AuthFooter","styled","primary","light","children","other","maxWidth","lg","md","flexBasis","content","p","xl","scripted","useRef"],"mappings":"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","file":"static/js/14.df316d1c.chunk.js","sourcesContent":["/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport Google from 'assets/images/icons/social-google.svg';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ===========================|| FIREBASE - REGISTER ||=========================== //\n\nconst FirebaseRegister = ({ ...others }) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = useState(false);\n    const [checked, setChecked] = useState(true);\n\n    const [strength, setStrength] = useState(0);\n    const [level, setLevel] = useState();\n\n    const googleHandler = async () => {\n        console.error('Register');\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            variant=\"outlined\"\n                            fullWidth\n                            onClick={googleHandler}\n                            size=\"large\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100]\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\n                            </Box>\n                            Sign up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box sx={{ alignItems: 'center', display: 'flex' }}>\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"\"\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box sx={{ mb: 2 }}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                style={{ backgroundColor: level?.color }}\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\n                                            />\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level?.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseRegister;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport AuthRegister from '../auth-forms/AuthRegister';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        {/* <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography> */}\n    </Stack>\n);\n\nexport default AuthFooter;\n"],"sourceRoot":""}