{"version":3,"sources":["views/dataingest/stepForm/ActionButton.js","views/dataingest/stepForm/Info.js","views/dataingest/stepForm/Query.js","views/dataingest/stepForm/Source.js","views/dataingest/stepForm/Review.js","views/dataingest/stepForm/Finish.js","views/dataingest/CreateNewFlow.jsx","views/dataingest/stepForm/constant.js","views/dataingest/MultipleSelectCheckmarks.js"],"names":["ActionButtons","props","currentStep","Button","onClick","previousStep","totalSteps","nextStep","lastStep","Info","React","useState","Date","dateValue","setDateValue","divStyle","margin","error","setError","daginfo","setDagInfo","console","log","subscription_id","setSubscription_id","useEffect","router","config","rootapi","UserService","getUsername","axios","method","url","then","res","data","catch","crontab_struct","processTime","Schedule","onInputChanged","event","targetName","target","name","targetValue","value","style","color","Box","TextField","label","id","DagId","size","onChange","FormControl","fullWidth","InputLabel","Select","headername","key","map","scheduletype","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","newValue","renderInput","params","tags","getairflowapi","get","err","userCallback","Query","formSrcFields","undefined","srcData","queryname","querydetail","listsourcetable","targettable","writemode","formQuery","setformQuery","handleformQuery","index","formquery","MultipleSelectCheckmarks","headerName","source","splice","removeQuery","multiline","formSrcField","alias","writemodetype","is_error","i","length","Source","sourcetype","connectstring","databasename","srcusername","srcpassword","tablename","setFormSrcFields","handleFormSrcChange","form","datatypes","datatype","removeFields","check_dict","Review","conf","marginTop","component","sx","m","width","noValidate","autoComplete","InputProps","readOnly","disableUnderline","variant","focused","owner","query","Finish","loading","timerRef","useRef","clearTimeout","current","display","flexDirection","alignItems","height","Fade","in","transitionDelay","unmountOnExit","CircularProgress","CreateNewFlow","navigate","useNavigate","setStepWizard","activeStep","setActiveStep","setConf","setLoading","MainCard","IconButton","fontSize","Stepper","Step","StepLabel","instance","onStepChange","e","val","schedule_interval","body","invoicebody","JSON","stringify","toLocaleString","airflowapi","auth","username","password","status","setTimeout","scheduletypes","time","minus","getMinutes","day","getDay","hours","getHours","date","getDate","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","itemname","setitemname","names","item","labelId","multiple","join","split","input","renderValue","selected","checked","indexOf","primary"],"mappings":"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","file":"static/js/20.3604c1a7.chunk.js","sourcesContent":["import { Button } from \"@mui/material\";\r\n\r\nexport default function ActionButtons(props){\r\n    const handleBack = () => {\r\n      props.previousStep();\r\n    };\r\n  \r\n    const handleNext = () => {\r\n      props.nextStep();\r\n    };\r\n  \r\n    const handleFinish = () => {\r\n      props.lastStep();\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n  \r\n        {props.currentStep > 1 && (\r\n  \r\n          <Button onClick={handleBack}>Trở về</Button>\r\n  \r\n        )}\r\n  \r\n        {props.currentStep < props.totalSteps -1 && (\r\n          <Button onClick={handleNext}>Tiếp </Button>\r\n        )}\r\n        {props.currentStep === props.totalSteps - 1 && (\r\n          <Button onClick={handleFinish}>Tạo tiến trình</Button>\r\n        )}\r\n  \r\n  \r\n      </div>\r\n    );\r\n  };","import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport ActionButtons from \"./ActionButton\";\r\nimport { useState, useEffect } from \"react\";\r\nimport config from \"../../../config\";\r\nimport axios from 'axios';\r\nimport { Select } from '@mui/material';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport UserService from \"services/UserService\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\r\nimport { processTime } from \"./constant\";\r\nexport const Info = (props) => {\r\n  const [dateValue, setDateValue] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n\r\n  const divStyle = {\r\n    margin: '5px'\r\n  };\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [daginfo, setDagInfo] = useState({})\r\n  console.log(daginfo)\r\n\r\n  const [subscription_id, setSubscription_id] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let router = config.rootapi + '/subscription/subbyusername/' + UserService.getUsername()\r\n    axios({\r\n      method: 'get',\r\n      url: router\r\n    })\r\n      .then(res => {\r\n        setSubscription_id(res.data.data)\r\n      })\r\n      .catch(error => console.log(error))\r\n  }, [])\r\n  useEffect(() => {\r\n    let crontab_struct = processTime(dateValue, daginfo?.Schedule)\r\n    setDagInfo({ ...daginfo, 'schedule_interval': crontab_struct });\r\n\r\n\r\n  }, [daginfo.Schedule])\r\n\r\n\r\n\r\n  const handleChange = (newValue) => {\r\n    setDateValue(newValue)\r\n    let crontab_struct = processTime(newValue, daginfo?.Schedule)\r\n    setDagInfo({ ...daginfo, 'schedule_interval': crontab_struct });\r\n\r\n  };\r\n\r\n\r\n  const onInputChanged = (event) => {\r\n    const targetName = event.target.name;\r\n    const targetValue = event.target.value;\r\n\r\n    setDagInfo((daginfo) => ({\r\n      ...daginfo,\r\n      [targetName]: targetValue\r\n    }));\r\n  };\r\n  console.log('daginfo:', daginfo)\r\n\r\n  const scheduletypes = [\r\n    {\r\n      key: 'None',\r\n      name: 'None'\r\n    },\r\n    {\r\n      key: '@once',\r\n      name: 'Một lần'\r\n    },\r\n    {\r\n      key: '@hourly',\r\n      name: 'Hằng giờ'\r\n    },\r\n    {\r\n      key: '@daily',\r\n      name: 'Hằng ngày'\r\n    },\r\n    {\r\n      key: '@weekly',\r\n      name: 'Hằng tuần'\r\n    },\r\n    {\r\n      key: '@monthly',\r\n      name: 'Hằng tháng'\r\n    }\r\n\r\n\r\n  ]\r\n\r\n\r\n  const validate = () => {\r\n    const getairflowapi = config.rootapi + '/invoice/' + daginfo.DagId;\r\n    axios.get(getairflowapi)\r\n      .then(res => {\r\n        setError(\"Đã tồn tại tên tiến trình!\");\r\n\r\n      })\r\n      .catch(err => {\r\n        if (!daginfo.DagId || !daginfo.Schedule || !daginfo.tags || !daginfo.subscription_id) setError(\"Thông tin không chính xác!\");\r\n        else {\r\n          setError(\"\");\r\n          props.nextStep();\r\n          props.userCallback(daginfo);\r\n        }\r\n      })\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <strong>\r\n        Thông tin tiến trình\r\n      </strong><br></br>\r\n      <span style={{ color: 'red' }}>{error}</span>\r\n\r\n      <Box >\r\n\r\n\r\n        <TextField\r\n          label=\"Tên tiến trình\"\r\n          id=\"DagId\"\r\n          name=\"DagId\"\r\n          value={daginfo.DagId}\r\n          size=\"small\"\r\n          onChange={onInputChanged}\r\n          style={divStyle}\r\n\r\n        />\r\n\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Tần suất chạy</InputLabel>\r\n          <Select id=\"Schedule\" name='Schedule' value={daginfo.Schedule} onChange={onInputChanged}\r\n            size=\"small\"\r\n            style={divStyle}\r\n            headername={'Tần suất chạy'}\r\n            label='Tần suất chạy'\r\n             \r\n          >\r\n\r\n            {scheduletypes.map((scheduletype) => (\r\n              <MenuItem\r\n                key={scheduletype.key}\r\n                value={scheduletype.key}\r\n              >\r\n                {scheduletype.name}\r\n              </MenuItem>\r\n            ))}\r\n\r\n          </Select>\r\n          <br></br>\r\n        </FormControl>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <DateTimePicker\r\n            label=\"Lịch chay\"\r\n            name=\"schedule_interval\"\r\n            value={dateValue}\r\n            onChange={handleChange}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </LocalizationProvider>\r\n        <br></br>\r\n        <TextField\r\n          label=\"Tags\"\r\n          id=\"tags\"\r\n          name=\"tags\"\r\n          value={daginfo.tags}\r\n          onChange={onInputChanged}\r\n          size=\"small\"\r\n          style={divStyle}\r\n        />\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Subscription</InputLabel>\r\n\r\n          <Select id=\"subscription_id\" name='subscription_id' value={daginfo.subscription_id} onChange={onInputChanged}\r\n            size=\"small\"\r\n            style={divStyle}\r\n            headername={'Subscription id'}\r\n          >\r\n\r\n            {subscription_id.map((scheduletype) => (\r\n              <MenuItem\r\n                key={scheduletype.subscription_id}\r\n                value={scheduletype.subscription_id}\r\n              >\r\n                {scheduletype.subscription_id}\r\n              </MenuItem>\r\n            ))}\r\n\r\n          </Select>\r\n        </FormControl>\r\n\r\n\r\n\r\n      </Box>\r\n      <ActionButtons {...props} nextStep={validate} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Select } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { IconSquarePlus, IconCircleMinus } from '@tabler/icons'\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MultipleSelectCheckmarks from '../MultipleSelectCheckmarks';\r\nimport ActionButtons from \"./ActionButton\";\r\nimport { useState } from \"react\";\r\nimport { writemodetype } from \"./constant\";\r\n\r\nexport const Query = (props) => {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const formSrcFields = props.srcData !== undefined ? props.srcData : []\r\n  const divStyle = {\r\n    margin: '5px'\r\n  };\r\n\r\n\r\n  const [formQuery, setformQuery] = useState([\r\n    {\r\n      queryname: '',\r\n      querydetail: '',\r\n      listsourcetable: '',\r\n      targettable: '',\r\n      writemode: ''\r\n    },\r\n  ])\r\n  const removeQuery = (index) => {\r\n    let data = [...formQuery];\r\n    data.splice(index, 1)\r\n    setformQuery(data)\r\n  }\r\n  const addFieldQuery = () => {\r\n    let object = {\r\n      queryname: '',\r\n      querydetail: '',\r\n      // targettype: '',\r\n      listsourcetable: '',\r\n      targettable: ''\r\n    }\r\n\r\n    setformQuery([...formQuery, object])\r\n\r\n  }\r\n  const handleformQuery = (event, index) => {\r\n    let data = [...formQuery];\r\n    data[index][event.target.name] = event.target.value;\r\n    setformQuery(data);\r\n  }\r\n\r\n  const validate = () => {\r\n    let is_error = true;\r\n    for (let i = 0; i < formQuery.length; i++) {\r\n      for (let key in formQuery[i]) {\r\n        if (!formQuery[i][key]) {\r\n          is_error = false\r\n          setError(\"Không được bỏ trống các trường\");\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (is_error) {\r\n      setError(\"\");\r\n      props.nextStep();\r\n      props.userCallback(formQuery);\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <strong>\r\n        Đăng ký thủ tục tổng hợp dữ liệu\r\n      </strong><br></br>\r\n      <span style={{ color: 'red' }}>{error}</span>\r\n      <div  >\r\n        {formQuery?.map((formquery, index) => (\r\n          <div key={index} >\r\n            <strong>Query {index + 1} </strong>\r\n            <div >\r\n              {/* <strong>Query {index}</strong> */}\r\n              <TextField\r\n                label=\"Tên job tổng hợp\"\r\n                id=\"queryname\"\r\n                name=\"queryname\"\r\n                value={formquery?.queryname}\r\n                size=\"small\"\r\n                onChange={event => handleformQuery(event, index)}\r\n                style={divStyle}\r\n              />\r\n              <br></br>\r\n\r\n\r\n              {/* <TextField\r\n                          label=\"Danh sách bảng cần tổng hợp\"\r\n                          id=\"listsourcetable\"\r\n                          name=\"listsourcetable\"\r\n                          value={formquery.listsourcetable}\r\n                          onChange={event => handleformQuery(event, index)}\r\n                          size=\"small\"\r\n                          style={divStyle}\r\n                      />  */}\r\n\r\n\r\n              <MultipleSelectCheckmarks\r\n                headerName={'Danh sách bảng cần tổng hợp'}\r\n                data={formSrcFields}\r\n                formQuery={formQuery}\r\n                setformQuery={setformQuery}\r\n                index={index}\r\n                source={'listsourcetable'}\r\n              />\r\n\r\n              <Button name=\"btnremovequery\" onClick={() => removeQuery(index)}><IconCircleMinus /></Button>\r\n              <br></br>\r\n              <TextField\r\n                label=\"Query Detail\"\r\n                id=\"querydetail\"\r\n                name=\"querydetail\"\r\n                multiline\r\n                size=\"small\"\r\n                fullWidth\r\n                value={formquery.querydetail}\r\n                onChange={event => handleformQuery(event, index)}\r\n                style={divStyle}\r\n              />\r\n\r\n              <Select name='targettable'\r\n                value={formquery.targettable}\r\n                onChange={event => handleformQuery(event, index)}\r\n                size=\"small\"\r\n                style={divStyle}\r\n              >\r\n\r\n                {formSrcFields?.map((formSrcField) => (\r\n                  <MenuItem\r\n                    key={formSrcField.alias}\r\n                    value={formSrcField.alias}\r\n                  >\r\n                    {formSrcField.alias}\r\n                  </MenuItem>\r\n                ))}\r\n\r\n              </Select>\r\n\r\n              Write mode\r\n              <Select name='writemode'\r\n                value={formquery.writemode}\r\n                onChange={event => handleformQuery(event, index)}\r\n                size=\"small\"\r\n                style={divStyle}\r\n              >\r\n\r\n                {writemodetype.map((writemode) => (\r\n                  <MenuItem\r\n                    key={writemode.key}\r\n                    value={writemode.key}\r\n                  >\r\n                    {writemode.name}\r\n                  </MenuItem>\r\n                ))}\r\n\r\n              </Select>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        ))\r\n        }\r\n        <Button style={divStyle} name=\"btnaddquery\" onClick={addFieldQuery}><IconSquarePlus /></Button>\r\n      </div>\r\n      <ActionButtons {...props} nextStep={validate} />\r\n\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ActionButtons from \"./ActionButton\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport { Select } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { IconSquarePlus, IconCircleMinus } from '@tabler/icons'\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useState } from \"react\";\r\nimport { datatypes } from \"./constant\";\r\n\r\nexport const Source = (props) => {\r\n    const [error, setError] = useState(\"\");\r\n\r\n    \r\n    const [formSrcFields, setFormSrcFields] = useState([\r\n        {\r\n            sourcetype: '',\r\n            connectstring: '',\r\n            databasename: '',\r\n            srcusername: '',\r\n            srcpassword: '',\r\n            tablename: '',\r\n            alias: ''\r\n        },\r\n    ])\r\n    const handleFormSrcChange = (event, index) => {\r\n        let data = [...formSrcFields];\r\n        data[index][event.target.name] = event.target.value;\r\n        setFormSrcFields(data);\r\n    }\r\n    const removeFields = (index) => {\r\n        let data = [...formSrcFields];\r\n        data.splice(index, 1)\r\n        setFormSrcFields(data)\r\n    }\r\n    const addFields = () => {\r\n        let object = {\r\n            sourcetype: '',\r\n            connectstring: '',\r\n            tablename: '',\r\n            alias: ''\r\n        }\r\n\r\n        setFormSrcFields([...formSrcFields, object])\r\n    }\r\n\r\n\r\n    const divStyle = {\r\n        margin: '5px'\r\n    };\r\n\r\n    const validate = () => {\r\n        let is_error = true;\r\n        let check_dict = {}\r\n        for(let i= 0;i<formSrcFields.length;i++){\r\n            if(!formSrcFields[i].alias){\r\n                is_error = false\r\n                setError(\"Không được bỏ trống trường Alias\");\r\n                break;\r\n            }\r\n            if(formSrcFields[i].alias in check_dict){\r\n                setError(\"Các trường Alias phải khác nhau\");\r\n                is_error = false\r\n                break;\r\n            }\r\n            check_dict[formSrcFields[i].alias] = 1\r\n        }\r\n        if(is_error){\r\n            setError(\"\");\r\n            props.nextStep();\r\n            props.userCallback(formSrcFields);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n                <strong>\r\n                    Đăng ký dữ liệu\r\n                </strong>\r\n            </p>\r\n            <br></br>\r\n            <span style={{color:'red'}}>{error}</span>\r\n\r\n\r\n            <Box >\r\n                {formSrcFields?.map((form, index) => {\r\n                    return (\r\n                        <div key={index}  >\r\n                            <strong>Source {index + 1} </strong>\r\n                            <Select name='sourcetype' value={form.sourcetype} onChange={event => handleFormSrcChange(event, index)}\r\n                                size=\"small\"\r\n                                style={divStyle}\r\n                            >\r\n\r\n                                {datatypes.map((datatype) => (\r\n                                    <MenuItem\r\n                                        key={datatype.key}\r\n                                        value={datatype.key}\r\n                                    >\r\n                                        {datatype.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n\r\n                            </Select>\r\n\r\n\r\n                            <TextField\r\n                                name='connectstring'\r\n                                size=\"small\"\r\n                                label='Đường dẫn kết nối'\r\n                                onChange={event => handleFormSrcChange(event, index)}\r\n                                value={form.connectstring}\r\n                                style={divStyle}\r\n                            />\r\n                            <TextField\r\n                                name='databasename'\r\n                                size=\"small\"\r\n                                label='Tên cơ sở dữ liệu'\r\n                                onChange={event => handleFormSrcChange(event, index)}\r\n                                value={form.databasename}\r\n                                style={divStyle}\r\n                            />\r\n                            <TextField\r\n                                name='srcusername'\r\n                                size=\"small\"\r\n                                label='Tài khoản đăng nhập'\r\n                                onChange={event => handleFormSrcChange(event, index)}\r\n                                value={form.srcusername}\r\n                                style={divStyle}\r\n                            />\r\n                            <TextField\r\n                                name='srcpassword'\r\n                                size=\"small\"\r\n                                label='Mật khẩu'\r\n                                onChange={event => handleFormSrcChange(event, index)}\r\n                                value={form.srcpassword}\r\n                                style={divStyle}\r\n                            />\r\n                            <br></br>\r\n\r\n                            <TextField\r\n                                name='tablename'\r\n                                size=\"small\"\r\n                                multiline\r\n                                fullWidth\r\n                                label='Tên bảng/Truy vấn/Tên file'\r\n                                onChange={event => handleFormSrcChange(event, index)}\r\n                                value={form.tablename}\r\n                                style={divStyle}\r\n                            />\r\n                            <br></br>\r\n                            <TextField\r\n                                name='alias'\r\n                                size=\"small\"\r\n                                label='Tên bảng cho tiến trình'\r\n                                onChange={event => handleFormSrcChange(event, index)}\r\n                                value={form.alias}\r\n                                style={divStyle}\r\n                            />\r\n                            <Button style={divStyle} name=\"removesource\" onClick={() => removeFields(index)}><IconCircleMinus /></Button>\r\n                            <br></br>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <Button style={divStyle} name=\"addsoruce\" onClick={addFields}><IconSquarePlus /></Button>\r\n            </Box>\r\n\r\n            <ActionButtons {...props} nextStep={validate}/>\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n//import { useState, useEffect } from 'react'\r\nimport ActionButtons from \"./ActionButton\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\n\r\nexport const Review = (props) => {\r\n  const conf = props.conf\r\n  //console.log(conf)\r\n  //const classes = useStyles();  \r\n  const divStyle = {\r\n    margin: '5px',\r\n  };\r\n\r\n  const validate = () => {\r\n    props.lastStep();\r\n    props.userCallback();\r\n  }\r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <h3>Thông số chi tiết tiến trình</h3>\r\n      <Box component=\"form\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\">\r\n\r\n        <TextField\r\n          id=\"DagId\"\r\n          label=\"Tên tiến trình\"\r\n          value={conf?.DagId}\r\n          InputProps={{\r\n            readOnly: true,\r\n            disableUnderline: true,\r\n          }}\r\n          variant=\"standard\"\r\n\r\n           focused='true'\r\n          size=\"small\"\r\n\r\n        />\r\n\r\n        <TextField\r\n          label=\"Tần suất chạy\"\r\n          id=\"Schedule\"\r\n          name=\"Schedule\"\r\n          size=\"small\"\r\n\r\n          value={conf?.Schedule}\r\n          // onChange={onInputChanged}\r\n          InputProps={{\r\n            readOnly: true,\r\n            disableUnderline: true,\r\n          }}\r\n          focused='true'\r\n          variant=\"standard\"\r\n\r\n        />\r\n\r\n        <TextField\r\n          label=\"Owner\"\r\n          id=\"Owner\"\r\n          name=\"Owner\"\r\n          size=\"small\"\r\n\r\n          value={conf?.owner}\r\n          // onChange={onInputChanged}\r\n          InputProps={{\r\n            readOnly: true,\r\n            disableUnderline: true,\r\n          }}\r\n          focused='true'\r\n          variant=\"standard\"\r\n\r\n        />\r\n\r\n        <TextField\r\n          label=\"Tags\"\r\n          id=\"tags_name\"\r\n          name=\"tags_name\"\r\n\r\n          focused='true'\r\n          variant=\"standard\"\r\n\r\n          value={conf?.tags}\r\n          // onChange={onInputChanged}\r\n          size=\"small\"\r\n          InputProps={{\r\n            readOnly: true,\r\n            disableUnderline: true,\r\n          }}\r\n\r\n        />\r\n        <TextField\r\n          label=\"Subscription_id\"\r\n          id=\"subscription_id\"\r\n          name=\"subscription_id\"\r\n\r\n          focused='true'\r\n          variant=\"standard\"\r\n\r\n          value={conf?.subscription_id}\r\n          // onChange={onInputChanged}\r\n          size=\"small\"\r\n          InputProps={{\r\n            readOnly: true,\r\n            disableUnderline: true,\r\n          }}\r\n\r\n        />\r\n\r\n      </Box>\r\n      {\r\n        //source\r\n      }\r\n      {\r\n        conf?.source?.map((form, index) => (\r\n          <Box component=\"form\"\r\n            sx={{\r\n              '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\">\r\n\r\n            <strong>Source {index + 1} </strong><br></br>\r\n            <TextField\r\n              label='Source Type'\r\n              name='sourcetype'\r\n              value={form?.sourcetype}\r\n              size=\"small\"\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true'\r\n              variant=\"standard\"\r\n            />\r\n            <TextField\r\n              label='Đường dẫn kết nối'\r\n              name='connectstring'\r\n              value={form?.connectstring}\r\n              size=\"small\"\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true'\r\n              variant=\"standard\"\r\n            />\r\n            <TextField\r\n              name='databasename'\r\n              size=\"small\"\r\n              label='Tên cơ sở dữ liệu'\r\n              value={form.databasename}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true'\r\n              variant=\"standard\"\r\n            />\r\n            <br></br>\r\n            <TextField\r\n              name='srcusername'\r\n              size=\"small\"\r\n              label='Tài khoản đăng nhập'\r\n              value={form.srcusername}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true'\r\n              variant=\"standard\"\r\n            />\r\n            <TextField\r\n              name='srcpassword'\r\n              size=\"small\"\r\n              label='Mật khẩu'\r\n              value={form.srcpassword}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true'\r\n              variant=\"standard\"\r\n              />\r\n\r\n            <TextField\r\n              name='tablename'\r\n              size=\"small\"\r\n              multiline\r\n              fullWidth\r\n              label='Tên bảng/Truy vấn/Tên file'\r\n              value={form.tablename}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true' \r\n              variant=\"standard\"\r\n              />\r\n            <TextField\r\n              name='alias'\r\n              size=\"small\"\r\n              label='Tên bảng cho tiến trình'\r\n              value={form.alias}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true' \r\n              variant=\"standard\"\r\n              />\r\n          </Box>\r\n        ))\r\n      }\r\n      {\r\n        //query\r\n      }\r\n\r\n      {\r\n        conf?.query?.map((formquery, index) => (\r\n          <Box \r\n          // component=\"form\"\r\n          //   sx={{\r\n          //     '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n          //   }}\r\n          //   noValidate\r\n          //   autoComplete=\"off\"\r\n            >\r\n            <strong>Query {index + 1} </strong>\r\n            <br></br>\r\n            <TextField\r\n              label=\"Tên job tổng hợp\"\r\n              id=\"queryname\"\r\n              name=\"queryname\"\r\n              value={formquery?.queryname}\r\n              size=\"small\"\r\n              style={divStyle}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true' \r\n              variant=\"standard\"\r\n            />\r\n            <TextField\r\n              label=\"Bảng cần tổng hợp\"\r\n              value={formquery?.listsourcetable}\r\n              size=\"small\"\r\n              style={divStyle}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true' \r\n              variant=\"standard\"\r\n            />\r\n            <br></br>\r\n\r\n            <TextField\r\n              label=\"Query Detail\"\r\n              id=\"querydetail\"\r\n              name=\"querydetail\"\r\n              multiline\r\n              size=\"small\"\r\n              fullWidth\r\n              value={formquery?.querydetail}\r\n              style={divStyle}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              focused='true' \r\n              \r\n            />\r\n            <br></br>\r\n\r\n\r\n            <TextField\r\n              label=\"Target table\"\r\n              size=\"small\"\r\n              value={formquery?.targettable}\r\n              style={divStyle}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true' \r\n              variant=\"standard\"\r\n            />\r\n            <TextField\r\n              label=\"Write mode\"\r\n              size=\"small\"\r\n              value={formquery?.writemode}\r\n              style={divStyle}\r\n              InputProps={{\r\n                readOnly: true,\r\n                disableUnderline: true,\r\n              }}\r\n              focused='true' \r\n              variant=\"standard\"\r\n            />\r\n\r\n\r\n          </Box>\r\n\r\n        ))\r\n      }\r\n\r\n\r\n      {/* <div><pre>{JSON.stringify(conf, null, 2)}</pre></div> */}\r\n\r\n\r\n      <ActionButtons {...props} lastStep={validate} />\r\n\r\n    </div>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Fade from '@mui/material/Fade';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nexport const Finish = (props) => {\r\n  const loading = props.loading\r\n  console.log(props.loading)\r\n  const timerRef = React.useRef();\r\n\r\n  useEffect(\r\n    () => () => {\r\n      clearTimeout(timerRef.current);\r\n    },\r\n    [],\r\n  );\r\n\r\n  // const handleClickLoading = () => {\r\n  //   props.setLoading((prevLoading) => !prevLoading);\r\n  // };\r\n\r\n  \r\n  return (\r\n    <div style={{ marginTop: \"1rem\" }}>\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center',marginTop:'80px' }}>\r\n        <Box sx={{ height: 80 }}>\r\n          <Fade\r\n            in={loading}\r\n            style={{\r\n              transitionDelay: loading ? '800ms' : '0ms',\r\n              width:'50px',\r\n              height:'50px',\r\n              color:'red'\r\n            }}\r\n            unmountOnExit\r\n          >\r\n            <CircularProgress />\r\n          </Fade>\r\n          \r\n        </Box>\r\n        {/* <Button onClick={handleClickLoading} sx={{ m: 2 }}>\r\n          {loading ? 'Stop loading' : 'Loading'}\r\n        </Button> */}\r\n      </Box>\r\n      {/* <ActionButtons {...props} /> */}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Stepper, Step, StepLabel } from \"@mui/material\";\r\nimport StepWizard from \"react-step-wizard\";\r\nimport { Info } from \"./stepForm/Info\";\r\nimport { Query } from \"./stepForm/Query\";\r\nimport { Source } from \"./stepForm/Source\";\r\nimport { Review } from \"./stepForm/Review\";\r\nimport { Finish } from \"./stepForm/Finish\";\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { IconButton } from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n\r\n\r\n\r\nimport UserService from 'services/UserService';\r\n\r\n\r\n\r\nconst CreateNewFlow = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const steps = ['Đăng ký tiến trình', 'Đăng ký CSDL', 'Tạo truy vấn tổng hợp', 'Xác nhận thông tin', 'Hoàn thành'];\r\n\r\n  const [stepWizard, setStepWizard] = useState(null);\r\n  const [user, setUser] = useState({});\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [daginfo, setDagInfo] = useState({})\r\n  const [formSrcFields, setFormSrcFields] = useState()\r\n  const [formQuery, setformQuery] = useState()\r\n  const [conf, setConf] = useState()\r\n\r\n\r\n\r\n\r\n  const assignStepWizard = (instance) => {\r\n    setStepWizard(instance);\r\n  };\r\n\r\n  const assignDagInfo = (val) => {\r\n    setDagInfo(val)\r\n  };\r\n  const assignSource = (val) => {\r\n    setFormSrcFields(val)\r\n  };\r\n\r\n\r\n  const assignQuery = (val) => {\r\n    setformQuery(val)\r\n\r\n    setConf({\r\n      'DagId': daginfo.DagId,\r\n      \"Schedule\": daginfo.Schedule,\r\n      'schedule_interval': daginfo.schedule_interval,\r\n      \"owner\": UserService.getUsername(),\r\n      'tags': daginfo.tags,\r\n      'subscription_id': daginfo.subscription_id,\r\n      'source': formSrcFields,\r\n      'query': val\r\n    })\r\n  };\r\n  console.log(conf)\r\n\r\n  const handleStepChange = (e) => {\r\n    setActiveStep(e.activeStep - 1);\r\n  };\r\n\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  // fetch data if done set loading = false\r\n\r\n  const submit = () => {\r\n    const body = {\r\n      \"conf\": { conf },\r\n    }\r\n    const invoicebody =\r\n    {\r\n      \"item_name\": conf.DagId,\r\n      \"item_type\": 'airflow',\r\n      \"customer_invoice_data\": JSON.stringify(body),\r\n      \"subscription_id\": conf.subscription_id,\r\n      \"plan_history_id\": 1,\r\n      \"invoice_period_start_date\": new Date().toLocaleString() + '',\r\n      \"invoice_period_end_date\": new Date().toLocaleString() + '',\r\n      \"invoice_description\": conf.DagId,\r\n      \"invoice_amount\": 100,\r\n      \"invoice_created_ts\": new Date().toLocaleString() + '',\r\n      \"invoice_due_ts\": new Date().toLocaleString() + '',\r\n      \"invoice_paid_ts\": new Date().toLocaleString() + ''\r\n    }\r\n    console.log(invoicebody)\r\n    axios({\r\n      method: 'post',\r\n      url: config.airflowapi + '/dags/dag_create_job_file/dagRuns',\r\n\r\n      auth: {\r\n        username: 'hung',\r\n        password: '123456a@'\r\n      },\r\n      data: body\r\n    })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          axios({\r\n            method: 'post',\r\n            url: config.rootapi + '/invoice',\r\n            data: invoicebody\r\n          })\r\n            .then(res => {\r\n              setTimeout(() => {\r\n                setLoading(false)\r\n                navigate('/dataingest')\r\n              }, 5000);\r\n\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n\r\n  }\r\n  const backtodataingest = () => {\r\n\r\n    navigate('/dataingest');\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <MainCard>\r\n      <IconButton onClick={() => backtodataingest()}>\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"medium\" />\r\n      </IconButton>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          return (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <br></br>\r\n      <StepWizard instance={assignStepWizard} onStepChange={handleStepChange}>\r\n        <Info userCallback={assignDagInfo} />\r\n        <Source userCallback={assignSource} />\r\n        <Query userCallback={assignQuery} srcData={formSrcFields} />\r\n        <Review userCallback={submit} conf={conf} />\r\n        <Finish loading={loading} setLoading={setLoading} />\r\n      </StepWizard>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default CreateNewFlow;","export const datatypes = [\r\n    {\r\n        key: 'storage',\r\n        name: 'Lưu trữ đám mây'\r\n    },\r\n    {\r\n        key: 'dwh',\r\n        name: 'Kho dữ liệu'\r\n    },\r\n    {\r\n        key: 'bigdata',\r\n        name: 'Dữ liệu lớn'\r\n    }\r\n    ,\r\n    {\r\n        key: 'sqlserver',\r\n        name: 'Microsof Sql'\r\n    }\r\n    ,\r\n    {\r\n        key: 'azuresql',\r\n        name: 'Azure SQL'\r\n    },\r\n    {\r\n        key: 'oracle',\r\n        name: 'Oracle'\r\n    }\r\n    ,\r\n    {\r\n        key: 'mysql',\r\n        name: 'MySQL'\r\n    }\r\n    ,\r\n    {\r\n        key: 'postgres',\r\n        name: 'PostgresSQL'\r\n    }\r\n\r\n\r\n]\r\nexport const scheduletypes = [\r\n    {\r\n        key: 'None',\r\n        name: 'None'\r\n    },\r\n    {\r\n        key: '@once',\r\n        name: 'Một lần'\r\n    },\r\n    {\r\n        key: '@hourly',\r\n        name: 'Hằng giờ'\r\n    },\r\n    {\r\n        key: '@daily',\r\n        name: 'Hằng ngày'\r\n    },\r\n    {\r\n        key: '@weekly',\r\n        name: 'Hằng tuần'\r\n    },\r\n    {\r\n        key: '@monthly',\r\n        name: 'Hằng tháng'\r\n    }\r\n\r\n\r\n]\r\nexport const writemodetype = [\r\n    {\r\n      key: 'append',\r\n      name: 'append'\r\n    },\r\n    {\r\n      key: 'overwrite',\r\n      name: 'overwrite'\r\n    }\r\n  ]\r\n  export  const processTime = (time,Schedule) =>{\r\n    let minus = time.getMinutes()\r\n    // let year = time.getFullYear()\r\n    // let month = time.getMonth()\r\n    let day = time.getDay()\r\n    let hours = time.getHours()\r\n    let date = time.getDate()\r\n    let crontab_struct =  'None'\r\n    if(Schedule === '@hourly'){\r\n      crontab_struct = `${minus} * * * *`\r\n    }\r\n    else if(Schedule === '@daily'){\r\n      crontab_struct = `${minus} ${hours} * * *`\r\n    }\r\n    else if(Schedule === '@weekly'){\r\n      crontab_struct = `${minus} ${hours} * * ${day}`\r\n    }\r\n    else if(Schedule === '@monthly'){\r\n      crontab_struct = `${minus} ${hours} ${date} * *`\r\n    }\r\n    return crontab_struct    \r\n  }","import * as React from 'react';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Select from '@mui/material/Select';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nexport default function MultipleSelectCheckmarks({headerName,data,formQuery,setformQuery,index,source}) {\r\n    const [itemname, setitemname] = React.useState([]);\r\n\r\n    const names = data?.map(item => {\r\n    if (item !== undefined){\r\n        return item.alias\r\n    }\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    let data = [...formQuery];\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    data[index][source] = value.join(',')\r\n    setformQuery(data);\r\n    setitemname(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, width: 300 }}>\r\n        <InputLabel id=\"multiple-checkbox-label\">{headerName}</InputLabel>\r\n        <Select\r\n          labelId=\"multiple-checkbox-label\"\r\n          id=\"multiple-checkbox\"\r\n          multiple\r\n          value={itemname}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput label='Tag' />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={itemname.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}"],"sourceRoot":""}